name: cluster
services:
  main:
    image: luieitalian/main32bit
    container_name: main
    networks:
      - network
    volumes:
      - logs_volume:/app/logs
    depends_on:
      - rest-platform
      - tcp-platform
      - kafka
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: debug
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      APP_RATE_CALCULATION_STRATEGY: JAVASCRIPT
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      CNN_TCP_ENABLED: true
      BLOOMBERG_REST_ENABLED: true

  tcp-platform:
    image: luieitalian/tcp-platform
    container_name: tcp-platform
    volumes:
      - ./initial_data_tcp.json:/app/initial_data.json:ro
    networks:
      - network
    environment:
      TCP_SERVER_USER: client
      TCP_SERVER_PASSWORD: 2345
      SPRING_PROFILES_ACTIVE: debug
      # Every 10 updates, apply a high fluctuation.
      FLUCTUATION_HIGH_RATE: 10
      # Strength of the bid fluctuation.
      FLUCTUATION_HIGH_BID_MULTIPLIER: 10
      # Strength of the spread fluctuation.
      FLUCTUATION_HIGH_SPREAD_MULTIPLIER: 6
      # Normal bid fluctuation.
      FLUCTUATION_NORMAL_BID_MULTIPLIER: 0.01
      # Normal spread fluctuation.
      FLUCTUATION_NORMAL_SPREAD_MULTIPLIER: 0.005
      # Interval of updates in terms of milliseconds.
      TCP_SIMULATOR_UPDATE_INTERVAL: 2000
      # Total streams, after 20 streams, the server shuts down.
      TCP_SERVER_TOTAL_STREAMS: 100
      # Interval of streams in terms of milliseconds.
      TCP_SERVER_STREAM_INTERVAL: 2100

  rest-platform:
    image: luieitalian/rest-platform
    container_name: rest-platform
    volumes:
      - ./initial_data_rest.json:/app/initial_data.json:ro
    networks:
      - network
    environment:
      REST_SERVER_USER: client
      REST_SERVER_PASSWORD: 1234
      REST_REQUEST_LIMIT: 100
      SPRING_PROFILES_ACTIVE: debug
      FLUCTUATION_HIGH_RATE: 10
      FLUCTUATION_HIGH_BID_MULTIPLIER: 10
      FLUCTUATION_HIGH_SPREAD_MULTIPLIER: 6
      FLUCTUATION_NORMAL_BID_MULTIPLIER: 0.01
      FLUCTUATION_NORMAL_SPREAD_MULTIPLIER: 0.005

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    networks:
      - network
    environment:
      # Cluster ID (unique identifier for Kafka cluster)
      CLUSTER_ID: qlWgb1R5R4GHgldQpgTcTQ
      # Kafka listeners (broker and controller)
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      # Advertised listeners (used by clients to connect)
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # Unique broker ID
      KAFKA_BROKER_ID: 1
      # Replication factor settings
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Enable auto topic creation
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      # Kafka process roles (broker and controller)
      KAFKA_PROCESS_ROLES: broker,controller
      # Node ID (for KRaft mode)
      KAFKA_NODE_ID: 1
      # Controller quorum voters (list of controllers)
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      # Listener security protocol mapping
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      # Define controller listener
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # Define inter-broker listener name
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - network

  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:7.12.1
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - logs_volume:/app/logs:ro
    command: "filebeat -e -strict.perms=false"
    networks:
      - network
    depends_on:
      - logstash

  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:latest
    container_name: logstash
    networks:
      - network
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - opensearch
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx256m"

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    networks:
      - network
    environment:
      discovery.type: single-node
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
      bootstrap.memory_lock: true
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: "Aloha.32bit"

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - "5601:5601" # OpenSearch Dashboards web arayüzü
    networks:
      - network
    depends_on:
      - opensearch
    environment:
      - OPENSEARCH_HOSTS=["https://opensearch:9200"]
      - SERVER_HOST=0.0.0.0
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=Aloha.32bit

networks:
  network:
    driver: bridge

volumes:
  logs_volume: